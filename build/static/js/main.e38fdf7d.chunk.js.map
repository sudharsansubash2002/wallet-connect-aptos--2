{"version":3,"sources":["abi.js","web3.js","App.js","reportWebVitals.js","index.js"],"names":["abi","web3","Web3","givenProvider","console","log","App","useState","address","Balance","data","setdata","token_name","settokenname","total_supply","settotalsupply","symbol_","setsymbol","decimals_","setdecimals","erc20contract","eth","Contract","accountChangeHandler","account","window","ethereum","request","method","params","then","balance","ethers","utils","formatEther","tokenname","a","methods","name","call","useEffect","totalSupply","b","symbol","string","c","decimals","functions","d","className","Card","Header","Body","Text","Button","onClick","res","alert","variant","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"8iBAIaA,G,OAAM,CAClB,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,UACR,KAAQ,WAET,CACC,KAAQ,QACR,KAAQ,YAGV,KAAQ,UACR,QAAW,CACV,CACC,KAAQ,GACR,KAAQ,SAGV,SAAW,EACX,gBAAmB,aACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,GACV,KAAQ,cACR,QAAW,CACV,CACC,KAAQ,GACR,KAAQ,YAGV,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,OACR,KAAQ,WAET,CACC,KAAQ,KACR,KAAQ,WAET,CACC,KAAQ,QACR,KAAQ,YAGV,KAAQ,eACR,QAAW,CACV,CACC,KAAQ,GACR,KAAQ,SAGV,SAAW,EACX,gBAAmB,aACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,MACR,KAAQ,YAGV,KAAQ,YACR,QAAW,CACV,CACC,KAAQ,GACR,KAAQ,YAGV,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,KACR,KAAQ,WAET,CACC,KAAQ,QACR,KAAQ,YAGV,KAAQ,WACR,QAAW,CACV,CACC,KAAQ,GACR,KAAQ,SAGV,SAAW,EACX,gBAAmB,aACnB,KAAQ,YAET,CACC,UAAY,EACZ,OAAU,CACT,CACC,KAAQ,QACR,KAAQ,WAET,CACC,KAAQ,UACR,KAAQ,YAGV,KAAQ,YACR,QAAW,CACV,CACC,KAAQ,GACR,KAAQ,YAGV,SAAW,EACX,gBAAmB,OACnB,KAAQ,YAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,KAAQ,QACR,KAAQ,WAET,CACC,SAAW,EACX,KAAQ,UACR,KAAQ,WAET,CACC,SAAW,EACX,KAAQ,QACR,KAAQ,YAGV,KAAQ,WACR,KAAQ,SAET,CACC,WAAa,EACb,OAAU,CACT,CACC,SAAW,EACX,KAAQ,OACR,KAAQ,WAET,CACC,SAAW,EACX,KAAQ,KACR,KAAQ,WAET,CACC,SAAW,EACX,KAAQ,QACR,KAAQ,YAGV,KAAQ,WACR,KAAQ,W,kBClKJC,EAAO,IAAIC,IAAKA,IAAKC,eAAiB,yBAC5CC,QAAQC,IAAI,iBAEZD,QAAQC,IAAIJ,GAEZG,QAAQC,IAAI,eAAeJ,GAQZA,Q,QCgGAK,MAlHf,WAGA,MAAwBC,mBAAS,CAChCC,QAAS,GACTC,QAAS,OAFV,mBAAOC,EAAP,KAAaC,EAAb,KAIA,EAAmCJ,mBAAS,IAA5C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAmCN,mBAAS,IAA5C,mBAAMO,EAAN,KAAmBC,EAAnB,KACA,EAAyBR,mBAAS,IAAlC,mBAAMS,EAAN,KAAcC,EAAd,KACA,EAA6BV,mBAAS,IAAtC,mBAAMW,EAAN,KAAgBC,EAAhB,KACMC,EAAgB,IAAInB,EAAKoB,IAAIC,SAAStB,EFnBjB,8CE0DrBuB,EAAuB,SAACC,GAjBX,IAAChB,EAmBnBG,EAAQ,CACRH,QAASgB,IApBUhB,EAwBRgB,EArBXC,OAAOC,SACNC,QAAQ,CACRC,OAAQ,iBACRC,OAAQ,CAACrB,EAAS,YAElBsB,MAAK,SAACC,GAENpB,EAAQ,CACRF,QAASuB,IAAOC,MAAMC,YAAYH,IAElC,GAYD,EACKI,EAAS,iDAAG,iBAAAC,EAAA,2FACHhB,EAAciB,QAAQC,OAAOC,OAD1B,OACbH,EADa,OAEjBvB,EAAauB,GAFI,2CAAH,qDAKdI,qBAAU,WAAKL,GAAY,IAE5B,IAAMM,EAAW,iDAAG,8GACLrB,EAAciB,QAAQI,cAAcF,OAD/B,OACfG,EADe,OAEjB3B,EAAe2B,GAFE,2CAAH,qDAIdF,qBAAU,WAAKC,GAAc,IAChC,IAAME,EAAM,iDAAG,8GACAvB,EAAcwB,OAAOD,SAASJ,OAD9B,OACVM,EADU,OAEb5B,EAAU4B,GAFG,2CAAH,qDAIVL,qBAAU,WAAKG,GAAS,IAC1B,IAAMG,EAAQ,iDAAG,8GACF1B,EAAc2B,UAAUD,WAAWP,OADjC,OACZS,EADY,OAEf7B,EAAY6B,GAFG,2CAAH,qDAQd,OAJER,qBAAU,WAAKM,GAAW,IAK3B,qBAAKG,UAAU,MAAf,SAIA,eAACC,EAAA,EAAD,CAAMD,UAAU,cAAhB,UACC,eAACC,EAAA,EAAKC,OAAN,WACA,+CACCzC,EAAKF,WAEN,eAAC0C,EAAA,EAAKE,KAAN,WACA,eAACF,EAAA,EAAKG,KAAN,WACC,+CACC3C,EAAKD,WAEP,cAAC6C,EAAA,EAAD,CAAQC,QAlFS,WAGd9B,OAAOC,SAGXD,OAAOC,SACLC,QAAQ,CAAEC,OAAQ,wBAClBE,MAAK,SAAC0B,GAAD,OAASjC,EAAqBiC,EAAI,GAAlC,IAEPC,MAAM,+BAEN,EAsE8BC,QAAQ,UAArC,+BAGA,uBACA,4CAAe9C,KACf,8CAAiBE,KACjB,wCAAWE,KACX,0CAAaE,YAMd,EC7GcyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACT,GAEJ,ECJYO,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,OAOJb,G","file":"static/js/main.e38fdf7d.chunk.js","sourcesContent":["\r\nexport const tokenaddress ='0xD8D2890C515D21F047c953f0bF17D45AB45E25b4';\r\n\r\n\r\nexport const abi = [\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"approve\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"totalSupply\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferFrom\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"who\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"balanceOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transfer\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"allowance\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"name\": \"spender\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Approval\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Transfer\",\r\n\t\t\"type\": \"event\"\r\n\t}\r\n]\r\n","import Web3 from 'web3';\r\n\r\n\r\n\r\n// ADDITION This is needed to allow this application to interact with metamask\r\n\r\n//window.alert(\"Do you want to connect with metamask\");\r\n\r\n//window.ethereum.enable();\r\n\r\n\r\n\r\n// window.web3 coming from metamask\r\n\r\nconst web3 = new Web3(Web3.givenProvider || 'http://localhost:8545');\r\nconsole.log('currProvider ');\r\n\r\nconsole.log(web3);\r\n\r\nconsole.log('currProvider',web3);\r\n\r\n//console.log(currProvider);\r\n\r\n\r\n\r\n//  Returns our version of web3 with metamask provider irrespective of web3 version injected by metamask\r\n\r\nexport default web3;","// Importing modules\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"./App.css\";\nimport { Button, Card } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {tokenaddress,abi} from \"./abi\";\nimport web3 from \"./web3\";\n\nfunction App() {\n\n// usetstate for storing and retrieving wallet details\nconst [data, setdata] = useState({\n\taddress: \"\",\n\tBalance: null,\n});\nconst [token_name, settokenname] = useState(\"\");\nconst[total_supply,settotalsupply]=useState(\"\");\nconst[symbol_,setsymbol]=useState(\"\");\nconst[decimals_,setdecimals]=useState(\"\");\nconst erc20contract = new web3.eth.Contract(abi, tokenaddress);\n\n\n\n// Button handler button for handling a\n// request event for metamask\nconst btnhandler = () => {\n\n\t// Asking if metamask is already present or not\n\tif (window.ethereum) {\n\n\t// res[0] for fetching a first wallet\n\twindow.ethereum\n\t\t.request({ method: \"eth_requestAccounts\" })\n\t\t.then((res) => accountChangeHandler(res[0]));\n\t} else {\n\talert(\"install metamask extension!!\");\n\t}\n};\n\n// getbalance function for getting a balance in\n// a right format with help of ethers\nconst getbalance = (address) => {\n\n\t// Requesting balance method\n\twindow.ethereum\n\t.request({\n\t\tmethod: \"eth_getBalance\",\n\t\tparams: [address, \"latest\"]\n\t})\n\t.then((balance) => {\n\t\t// Setting balance\n\t\tsetdata({\n\t\tBalance: ethers.utils.formatEther(balance),\n\t\t});\n\t});\n};\n\n// Function for getting handling all events\nconst accountChangeHandler = (account) => {\n\t// Setting an address data\n\tsetdata({\n\taddress: account,\n\t});\n\n\t// Setting a balance\n\tgetbalance(account);\n};\nconst tokenname = async()=>{\n\tlet a = await erc20contract.methods.name().call();\n\tsettokenname(a);\n\t// console.log(\"name\",a)\n\t  }\n\tuseEffect(()=>{tokenname()});\n\nconst totalSupply = async()=>{\n\tlet b = await erc20contract.methods.totalSupply().call();\n\t  settotalsupply(b);\n\t  }\n\t  useEffect(()=>{totalSupply()});\nconst symbol = async()=>{\n\tlet c = await erc20contract.string.symbol().call();\n\t\tsetsymbol(c);\n\t\t}\n\t\tuseEffect(()=>{symbol()});\nconst decimals = async()=>{\n\tlet d = await erc20contract.functions.decimals().call();\n\t\tsetdecimals(d);\n\t\t}\n\t\tuseEffect(()=>{decimals()});\t  \t\n\t\n\t\n\nreturn (\n\t<div className=\"App\">\n\t{/* Calling all values which we\n\thave stored in usestate */}\n\n\t<Card className=\"text-center\">\n\t\t<Card.Header>\n\t\t<strong>Address: </strong>\n\t\t{data.address}\n\t\t</Card.Header>\n\t\t<Card.Body>\n\t\t<Card.Text>\n\t\t\t<strong>Balance: </strong>\n\t\t\t{data.Balance}\n\t\t</Card.Text>\n\t\t<Button onClick={btnhandler} variant=\"primary\">\n\t\t\tConnect to wallet\n\t\t</Button>\n\t\t<br/>\n\t\t<p>Token Name:{token_name}</p>\n\t\t<p>Total supply:{total_supply}</p>\n\t\t<p>Symbol:{symbol_}</p>\n\t\t<p>decimals:{decimals_}</p>\n\t\t\n\t\t</Card.Body>\n\t</Card>\n\t</div>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}